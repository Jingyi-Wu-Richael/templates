arguments:
  parameters:

  # following are a list of parameters that might change based on user response.
  # some of these parameters are prefixed with cvat- to denote that they are special parameters and will be automatically populated by CVAT.
  # you can change the names, but changing names of special parameters might break the workflow.

  # Github url for source code
  # This will be mounted to the container
  # Setting visibility to private ensures that it does not appear in CVAT as the source code is fixed
  # You can, in fact, remove this from parameters and fix it in the artifacts below. This is just for demo.
  - name: source
    value: https://github.com/onepanelio/Mask_RCNN.git
    displayName: Model source code
    type: hidden
    visibility: private

  # Input path for this workflow
  # The value will be automatically populated by CVAT, if you will run this from CVAT.
  - name: cvat-annotation-path
    value: annotation-dump/sample_dataset
    hint: Path to annotated data in default object storage (i.e S3). In CVAT, this parameter will be pre-populated.
    displayName: Dataset path
    visibility: private
    
  # Output path for this workflow
  # The value will be automatically populated by CVAT, if you will run this from CVAT.
  - name: cvat-output-path
    value: workflow-data/output/sample_output
    hint: Path to store output artifacts in default object storage (i.e s3). In CVAT, this parameter will be pre-populated.
    displayName: Workflow output path
    visibility: private
  
  # Path to checkpoint
  # Since Onepanel has a filesyncer, all possible values will be displayed in the CVAT
  - name: cvat-finetune-checkpoint
    value: ''
    hint: Select the last fine-tune checkpoint for this model. It may take up to 5 minutes for a recent checkpoint show here. Leave empty if this is the first time you're training this model.
    displayName: Checkpoint path
    visibility: public
  
  # Number of classes
  # If you run this from CVAT, it will automatically populate this field based on number of labels in the given CVAT task.
  - name: cvat-num-classes
    displayName: Number of classes
    hint: Number of classes (i.e in CVAT taks) + 1 for background
    value: 81
    visibility: private
    
  # A set of hyperparameters used by the source code
  - name: hyperparameters
    displayName: Hyperparameters
    visibility: public
    type: textarea.textarea
    value: |-
      stage-1-epochs=1    #  Epochs for network heads
      stage-2-epochs=2    #  Epochs for finetune layers
      stage-3-epochs=3    #  Epochs for all layers
    hint: "Please refer to our <a href='https://docs.onepanel.ai/docs/getting-started/use-cases/computervision/annotation/cvat/cvat_annotation_model#arguments-optional' target='_blank'>documentation</a> for more information on parameters. Number of classes will be automatically populated if you had 'sys-num-classes' parameter in a workflow."
    
  # This helps CVAT determine in which format it should dump the data.
  # Common ones are: cvat_coco, cvat_tfrecord, cvat_yolo
  - name: dump-format
    value: cvat_coco
    displayName: CVAT dump format
    visibility: public
      
  # Docker image to use for this workflow
  # You can use any public image here (i.e PyTorch)
  # The jupyterlab image from Onepanel has many dependencies pre-installed
  - name: docker-image
    visibility: public
    value: onepanel/jupyterlab:1.0.1
    type: select.select
    displayName: Select TensorFlow image
    hint: Select the GPU image if you are running on a GPU node pool
    options:
    - name: 'TensorFlow 1.13.1 CPU Image'
      value: 'tensorflow/tensorflow:1.13.1-py3'
    - name: 'TensorFlow 1.13.1 GPU Image'
      value: 'tensorflow/tensorflow:1.13.1-gpu-py3'
  
  # Select a node for the workflow execution
  # In CVAT as well as Onepanel, it will be automatically populated based on your cluster settings.
  - displayName: Node pool
    hint: Name of node pool or group to run this workflow task
    type: select.select
    visibility: public
    name: sys-node-pool
    value: Standard_D4s_v3
    required: true
    options:
    - name: 'CPU: 2, RAM: 8GB'
      value: Standard_D2s_v3
    - name: 'CPU: 4, RAM: 16GB'
      value: Standard_D4s_v3
    - name: 'GPU: 1xK80, CPU: 6, RAM: 56GB'
      value: Standard_NC6

entrypoint: main
templates:
- dag:
    tasks:
    - name: train-model
      template: tensorflow
  name: main
- container:

    # A set of arguments you want to execute in the container to start training/inference.
    args:
    - |
      apt-get update \
      && apt-get install -y git wget libglib2.0-0 libsm6 libxext6 libxrender-dev \
      && pip install -r requirements.txt \
      && pip install boto3 pyyaml google-cloud-storage \
      && git clone https://github.com/waleedka/coco \
      && cd coco/PythonAPI \
      && python setup.py build_ext install \
      && rm -rf build \
      && cd ../../ \
      && wget https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 \
      && python setup.py install && ls \
      && python samples/coco/cvat.py train --dataset=/mnt/data/datasets \
        --model=workflow_maskrcnn \
        --extras="{{workflow.parameters.hyperparameters}}"  \
        --ref_model_path="{{workflow.parameters.cvat-finetune-checkpoint}}"  \
        --num_classes="{{workflow.parameters.cvat-num-classes}}" \
      && cd /mnt/src/ \
      && python prepare_dataset.py /mnt/data/datasets/annotations/instances_default.json
    command:
    - sh
    - -c
    image: '{{workflow.parameters.docker-image}}'
    volumeMounts:
    - mountPath: /mnt/data
      name: data
    - mountPath: /mnt/output
      name: output
    workingDir: /mnt/src
  nodeSelector:
    beta.kubernetes.io/instance-type: '{{workflow.parameters.sys-node-pool}}'
  inputs:
    artifacts:
    - name: data
      path: /mnt/data/datasets/
      s3:
        key: '{{workflow.namespace}}/{{workflow.parameters.cvat-annotation-path}}'
    - git:
        repo: '{{workflow.parameters.source}}'
        revision: "no-boto"
      name: src
      path: /mnt/src
  name: tensorflow
  outputs:
    artifacts:
    - name: model
      optional: true
      path: /mnt/output
      s3:
        key: '{{workflow.namespace}}/{{workflow.parameters.cvat-output-path}}/{{workflow.name}}'

volumeClaimTemplates:
- metadata:
    creationTimestamp: null
    name: data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 200Gi
- metadata:
    creationTimestamp: null
    name: output
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 200Gi
