# Docker containers that are part of the Workspace
containers:
- name: cvat-db
  image: postgres:10-alpine
  env:
  - name: POSTGRES_USER
    value: root
  - name: POSTGRES_DB
    value: cvat
  - name: POSTGRES_HOST_AUTH_METHOD
    value: trust
  - name: PGDATA
    value: /var/lib/psql/data
  ports:
  - containerPort: 5432
    name: tcp
  volumeMounts:
  - name: db
    mountPath: /var/lib/psql
- name: cvat-redis
  image: redis:4.0-alpine
  ports:
  - containerPort: 6379
    name: tcp
- name: cvat
  image: onepanel/cvat:v0.7.10-dev-gpu
  env:
  - name: DJANGO_MODWSGI_EXTRA_ARGS
    value: ""
  - name: ALLOWED_HOSTS
    value: '*'
  - name: CVAT_REDIS_HOST
    value: localhost
  - name: CVAT_POSTGRES_HOST
    value: localhost
  - name: CVAT_SHARE_URL
    value: /home/django/data
  - name: DJANGO_LOG_SERVER_HOST
    value: localhost
  - name: DJANGO_LOG_SERVER_PORT
    value: 5000
  - name: DJANGO_LOG_VIEWER_HOST
    value: localhost
  - name: DJANGO_LOG_VIEWER_PORT
    value: 5601
  - name: no_proxy
    value: cvat-kibana, cvat-logstash
  - name: NVIDIA_VISIBLE_DEVICES
    value: all
  - name: NVIDIA_DRIVER_CAPABILITIES
    value: compute,utility
  - name: NVIDIA_REQUIRE_CUDA
    value: "cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411"
  ports:
  - containerPort: 8080
    name: http
  volumeMounts:
  - name: data
    mountPath: /home/django/data
  - name: keys
    mountPath: /home/django/keys
  - name: logs
    mountPath: /home/django/logs
  - name: models
    mountPath: /home/django/models
  - name: share
    mountPath: /home/django/share
- name: cvat-ui
  image: onepanel/cvat-ui:v0.7.10-stable
  ports:
  - containerPort: 80
    name: http
# Uncomment following lines to enable S3 FileSyncer
# Refer to https://docs.onepanel.ai/docs/getting-started/use-cases/computervision/annotation/cvat/cvat_quick_guide#setting-up-environment-variables
#- name: filesyncer
#  image: onepanel/filesyncer:v0.0.4
#  command: ['python3', 'main.py']
#  volumeMounts:
#  - name: share
#    mountPath: /mnt/share
- name: cvat-elasticsearch
  image: onepanel/cvat-elasticsearch:v0.0.1
  volumeMounts:
  - name: events
    mountPath: /usr/share/elasticsearch/data
  ports:
  - containerPort: 9200
    name: http
- name: cvat-kibana
  image: onepanel/cvat-kibana:v0.0.1
  ports:
  - containerPort: 5601
    name: http
  env:
  - name: ELASTICSEARCH_URL
    value: http://localhost:9200
- name: cvat-kibana-setup
  image:  onepanel/cvat:v0.7.10-elastic
  command: ['bash']
  args: ['-c','/bin/bash wait-for-it.sh localhost:9200 -t 0 --; /bin/bash wait-for-it.sh localhost:5601 -t 0 -- ; /usr/bin/python3 /tmp/components/analytics/kibana/setup.py -Hlocalhost /tmp/components/analytics/kibana/export.json ; sleep infinity']
    #no_proxy: cvat-elasticsearch, cvat-kibana, ${no_proxy}
  env:
  - name: DJANGO_LOG_SERVER_HOST
    value: localhost
  - name: DJANGO_LOG_SERVER_PORT
    value: 5000
  - name: DJANGO_LOG_VIEWER_HOST
    value: localhost
  - name: DJANGO_LOG_VIEWER_PORT
    value: 5601
- name: cvat-logstash
  image: onepanel/cvat-logstash:v0.0.2
  ports:
  - containerPort: 5000
    name: tcp
ports:
- name: cvat-ui
  port: 80
  protocol: TCP
  targetPort: 80
- name: cvat
  port: 8080
  protocol: TCP
  targetPort: 8080
routes:
- match:
  - uri:
      regex: /api/.*|/git/.*|/tensorflow/.*|/auto_annotation/.*|/analytics/.*|/static/.*|/admin/.*|/documentation/.*|/dextr/.*|/reid/.*
  - queryParams:
      id:
        regex: \d+.*
  route:
  - destination:
      port:
        number: 8080
  timeout: 600s
- match:
  - uri:
      prefix: /
  route:
  - destination:
      port:
        number: 80
  timeout: 600s
# DAG Workflow to be executed once a Workspace action completes (optional)
# Uncomment the lines below if you want to send Slack notifications
#postExecutionWorkflow:
#  entrypoint: main
#  templates:
#  - name: main
#    dag:
#       tasks:
#       - name: slack-notify
#         template: slack-notify
#  - name: slack-notify
#     container:
#       image: technosophos/slack-notify
#       args:
#       - SLACK_USERNAME=onepanel SLACK_TITLE="Your workspace is ready" SLACK_ICON=https://www.gravatar.com/avatar/5c4478592fe00878f62f0027be59c1bd SLACK_MESSAGE="Your workspace is now running" ./slack-notify
#       command:
#       - sh
#       - -c
