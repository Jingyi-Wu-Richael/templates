ARG BASE_CONTAINER=onepanel/jupyterlab-base
FROM $BASE_CONTAINER

LABEL maintainer="OnepanelIO <aleksandr@onepanel.io>"

#Do not switch out root user, want to run as root.
USER root

COPY "libcudnn8-dev_8.0.2.39-1+cuda10.2_amd64.deb" "libcudnn8-dev_8.0.2.39-1+cuda10.2_amd64.deb"
COPY "libcudnn8_8.0.2.39-1+cuda10.2_amd64.deb" "libcudnn8_8.0.2.39-1+cuda10.2_amd64.deb"
COPY keyboard.conf keyboard.conf

ARG TENSORFLOW_VERSION=r2.3.0
ENV TF_CUDA_COMPUTE_CAPABILITIES=3.5,7.0
ENV TF_NEED_CUDA 1

RUN DEBIAN_FRONTEND=noninteractive sudo apt update && \
    sudo apt install -y debconf-utils python3-dev python3-pip && \
    debconf-set-selections < keyboard.conf && \
    sudo apt-get install -y software-properties-common vim && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin && \
    sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
    sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
    sudo add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /" && \
    sudo apt-get update && \
    sudo apt-get -y install cuda-10-2 && \
    dpkg -i libcudnn8_8.0.2.39-1+cuda10.2_amd64.deb libcudnn8-dev_8.0.2.39-1+cuda10.2_amd64.deb && \
    pip install -U --user pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' && \
    pip install -U --user keras_applications --no-deps && \
    pip install -U --user keras_preprocessing --no-deps && \
    wget https://github.com/bazelbuild/bazelisk/releases/download/v1.5.0/bazelisk-linux-amd64 && \
    mv bazelisk-linux-amd64 /usr/local/bin/bazel && \
    chmod a+x /usr/local/bin/bazel && \
    git clone https://github.com/tensorflow/tensorflow.git && \
    cd tensorflow && \
    npm cache clean --force && \
    rm -rf "/home/${NB_USER}/.cache/yarn" && \
    rm -rf "/home/${NB_USER}/.node-gyp" && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"